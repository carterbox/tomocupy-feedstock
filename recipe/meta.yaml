{% set version = "1.0.0" %}
{% set build = 0 %}

package:
  name: tomocupy
  version: {{ version }}

source:
  url: https://github.com/tomography/tomocupy/archive/refs/tags/v{{ version }}.tar.gz
  sha256: f987c5d934b5616849d1988a47133eab39964c2b6b5b8d349a1a832f021509d4
build:
  skip: True  # [cuda_compiler_version == "10.2"]
  skip: True  # [cuda_compiler_version in (undefined, "None")]
  number: 0
  script: 
    - for /f "tokens=* usebackq" %%f in (`where nvcc`) do (set "dummy=%%f" && call set "CUDACXX=%%dummy:\=\\%%")  # [win]
    - echo %CUDACXX% # [win]
    - set CMAKE_CUDA_COMPILER=%CUDACXX% # [win]
    - set CUDA_HOME=%CUDACXX% # [win]
    - set CUDA_TOOLKIT_ROOT_DIR=%CUDACXX% # [win]    
    - set CMAKE_CUDA_COMPILER=%CUDACXX% # [win]    
    - {{ PYTHON }} -m pip install . -vv     
  script_env:
  # Minimum supported arch of this package is 60
    - CUDAARCHS=60;72;75
requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake
    - ninja
    - swig
  host:
    - cudatoolkit  # [cuda_compiler_version != "None"]
    - numpy
    - pip
    - python
    - scikit-build
    - setuptools
  run:
    - python
    - cupy
    - h5py
    - numexpr
    - numpy
    - opencv
    - pywavelets
    - tifffile

test:
   requires:
     - pip
   imports:
# Conda-forge bots do not have GPUs for testing
#      - tomocupy
   commands:
     - pip check
# Conda-forge bots do not have GPUs for testing
#      - tomocupy --help
     
about:
    home: https://github.com/tomography/tomocupy
    license: BSD-3-Clause
    license_family: BSD
    license_file: .licenses/license.c
    summary: 'GPU-based reconstruction of tomography data'
    
extra:
  recipe-maintainers:
    - nikitinvv
